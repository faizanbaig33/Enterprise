<?xml version="1.0"?>

<configuration xmlns:patch="http://www.sitecore.net/xmlconfig/" xmlns:set="http://www.sitecore.net/xmlconfig/set/" xmlns:role="http://www.sitecore.net/xmlconfig/role/" xmlns:env="http://www.sitecore.net/xmlconfig/env/" xmlns:search="http://www.sitecore.net/xmlconfig/search/">
  <sitecore>
    <services>
      <configurator type="Platform.Foundation.Core.Services.SitecoreExtensionsConfigurator, Platform" />
    </services>
    <api>
      <GraphQL>
        <defaults>
          <security>
            <publicService>
              <complexityConfiguration>
                <maxComplexity>20000</maxComplexity>
              </complexityConfiguration>
            </publicService>
          </security>
          <content>
            <fieldTypeMappings>
              <standardTypeMapping type="Sitecore.Services.GraphQL.Content.TemplateGeneration.FieldTypeToGraphQLTypeMapper, Sitecore.Services.GraphQL.Content">
                <typeMapping hint="raw:AddTypeMapping">
                  <map id="ew4" field="Multiroot Treelist" type="Sitecore.Services.GraphQL.Content.TemplateGeneration.FieldMapping.MultilistFieldTypeFactory, Sitecore.Services.GraphQL.Content"/>
                  <map id="ew1" field="MultiRootTreelist" type="Sitecore.Services.GraphQL.Content.TemplateGeneration.FieldMapping.MultilistFieldTypeFactory, Sitecore.Services.GraphQL.Content"/>
                  <map id="ew2" field="MultiRootTreelistEx" type="Sitecore.Services.GraphQL.Content.TemplateGeneration.FieldMapping.MultilistFieldTypeFactory, Sitecore.Services.GraphQL.Content"/>
                  <map id="ew3" field="FilterableDroptree" type="Sitecore.Services.GraphQL.Content.TemplateGeneration.FieldMapping.ReferenceFieldTypeFactory, Sitecore.Services.GraphQL.Content"/>
                </typeMapping>
              </standardTypeMapping>
              <inputTypeMapping type="Sitecore.Services.GraphQL.Content.Mutations.FieldTypeToJsonTypeMapper, Sitecore.Services.GraphQL.Content">
                <typeMapping hint="raw:AddTypeMapping">
                  <map id="ew1" field="filterabledroptree" type="Sitecore.Services.GraphQL.Content.Mutations.JsonFields.JsonReferenceField, Sitecore.Services.GraphQL.Content"/>
                </typeMapping>
              </inputTypeMapping>
            </fieldTypeMappings>
          </content>
        </defaults>
      </GraphQL>
    </api>

    <!-- Index the SiteName field so we can query it using the Exp Edge Preview API -->
    <contentSearch search:require="solr">
      <indexConfigurations>
        <defaultSolrIndexConfiguration type="Sitecore.ContentSearch.SolrProvider.SolrIndexConfiguration, Sitecore.ContentSearch.SolrProvider">
          <documentOptions type="Sitecore.ContentSearch.SolrProvider.SolrDocumentBuilderOptions, Sitecore.ContentSearch.SolrProvider">
            <exclude hint="list:AddExcludedField">
              <SiteName_CB4E9E2E tag="{CB4E9E2E-2B66-43DC-AD3F-9CAF363D28D3}">
                <patch:delete />
              </SiteName_CB4E9E2E>
            </exclude>
          </documentOptions>
        </defaultSolrIndexConfiguration>
      </indexConfigurations>
    </contentSearch>

    <layoutService>
      <serializationMaxDepth>10</serializationMaxDepth>
      <configurations>
        <config name="default">
          <rendering>
            <itemSerializer set:type="Platform.Foundation.Core.LayoutService.Serialization.ItemSerializers.ExtendedItemSerializer, Platform" />
          </rendering>
        </config>
      </configurations>
    </layoutService>

    <commands>
      <command name="enterpriseweb:jssjsonview" type="Platform.Foundation.Core.Commands.JssJsonView, Platform" resolve="true" />
      <command name="enterpriseweb:managechilddatasources" type="Platform.Foundation.Core.Commands.ManageChildDataSources,  Platform" resolve="true" />
      <command name="enterpriseweb:insertchilddatasource" type="Platform.Foundation.Core.Commands.InsertChildDataSource, Platform" resolve="true" />
      <command name="enterpriseweb:insertelement" type="Platform.Foundation.Core.Commands.InsertElement, Platform" resolve="true" />
      <!-- rename the old event to fallback -->
      <command name="item:addmaster">
        <patch:attribute name="name">item:addmaster:enterprisewebfallback</patch:attribute>
      </command>

      <!-- now plug in its place - the command in the class needs to do its job and call fallback if it's not supposed to handle the event -->
      <command name="item:addmaster" type="Platform.Foundation.Core.Commands.AddMaster, Platform" />
    </commands>

    <events>
      <event name="item:saved" role:require="Standalone or ContentManagement">
        <handler type="Platform.Foundation.Core.Events.ItemEvents, Platform" method="OnItemSaved" resolve="true" ></handler>
      </event>
    </events>

    <processors>
      <uiGetMasters>
        <processor type="Platform.Foundation.Core.Processors.UiGetMasters.GetItemMasters, Platform" resolve="true" patch:before="*[@type='Sitecore.Pipelines.GetMasters.CheckSecurity, Sitecore.Kernel']" />
      </uiGetMasters>
    </processors>

    <!--
      Since this solution is designed for Sitecore-first JSS workflow, remove editor
      warnings regarding import overwrites.
    -->
    <pipelines>
      <preprocessRequest>
        <!-- FIX: fix if "http,https" is in the Settings.LoadBalancingScheme header https://sitecore.stackexchange.com/questions/31578/next-js-headless-images-not-working-from-rendering-fe-instance-system-uribuil -->
        <processor patch:before="processor[@type='Sitecore.Pipelines.HttpRequest.OverrideDialogs, Sitecore.Speak.Applications']" type="Platform.Foundation.Core.Pipelines.PreProcessRequest.LoadBalancingSchemeFix, Platform" role:require="Standalone or ContentManagement or ContentDelivery" />
      </preprocessRequest>
      <group groupName="javaScriptServices">
        <pipelines>
          <item.getItemNotifications>
            <processor type="Sitecore.JavaScriptServices.AppServices.Pipelines.GetItemNotifications.IsItemAllowedForOverwrite, Sitecore.JavaScriptServices.AppServices">
              <patch:delete />
            </processor>
          </item.getItemNotifications>
        </pipelines>
      </group>
      <group groupName="layoutService">
        <pipelines>
          <renderJsonRendering>
            <processor type="Platform.Foundation.Core.Pipelines.RenderJsonRendering.RenderChildPlaceholders, Platform" resolve="true" patch:after="*[@type='Sitecore.LayoutService.Presentation.Pipelines.RenderJsonRendering.RenderPlaceholders, Sitecore.LayoutService']" />
            <processor type="Platform.Foundation.Core.Pipelines.RenderJsonRendering.RenderFieldPlaceholders, Platform" resolve="true" patch:after="*[@type='Sitecore.LayoutService.Presentation.Pipelines.RenderJsonRendering.RenderPlaceholders, Sitecore.LayoutService']" />
          </renderJsonRendering>
          <getFieldSerializer>
            <processor type="Sitecore.LayoutService.Serialization.Pipelines.GetFieldSerializer.GetMultilistFieldSerializer, Sitecore.LayoutService">
              <patch:attribute name="type" value="Platform.Foundation.Core.Pipelines.GetFieldSerializer.GetMultilistFieldSerializer, Platform" />
              <FieldTypes hint="list">
                <fieldType id="7">multiroottreelist</fieldType>
                <fieldType id="8">multiroottreelistex</fieldType>
                <fieldType id="9">multiroot treelist</fieldType>
              </FieldTypes>
            </processor>
            <processor type="Sitecore.LayoutService.Serialization.Pipelines.GetFieldSerializer.GetInternalLinkFieldSerializer, Sitecore.LayoutService">
              <patch:attribute name="type" value="Platform.Foundation.Core.Pipelines.GetFieldSerializer.GetInternalLinkFieldSerializer, Platform" />
              <FieldTypes hint="list">
                <fieldType id="4">filterabledroptree</fieldType>
              </FieldTypes>
            </processor>
          </getFieldSerializer>
          <getLayoutServiceContext>
            <processor type="Platform.Foundation.Core.Pipelines.GetLayoutServiceContext.GetLayoutContextSettings, Platform" resolve="true" />
          </getLayoutServiceContext>
        </pipelines>
      </group>
      <renderContentEditor>
        <!-- Inject js and css files into the content editor, see CustomContentEditorJavascript and CustomContentEditorStylesheets settings -->
        <processor patch:before="*[1]" type="Platform.Foundation.Core.Pipelines.RenderContentEditor.InjectScripts, Platform">
          <scripts hint="list:addScriptResource">
            <resource>/sitecore/shell/Applications/Content Manager/dialogs/EW.MutliRootTreeListExEditor/MultiRootTreeList.js</resource>
          </scripts>
          <styles hint="list:addStyleResource">
            <resource></resource>
          </styles>
        </processor>
      </renderContentEditor>
      <getContentEditorWarnings>
        <processor type="Platform.Foundation.Core.Pipelines.GetContentEditorWarnings.IsItemAsResource, Platform" />
      </getContentEditorWarnings>
      <expandInitialFieldValue>
        <processor type="Platform.Foundation.Core.Pipelines.ExpandInitialFieldValue.NameKebabToken, Platform" patch:after="processor[@type='Sitecore.Pipelines.ExpandInitialFieldValue.ReplaceVariables, Sitecore.Kernel']"/>
      </expandInitialFieldValue>
    </pipelines>

    <!-- START: Treelist/TreelistEX with multi roots configurations -->
    <!--https://mikael.com/2021/09/treelistex-field-type-with-multiple-roots/-->

    <!-- Added for calling sitecore item API -->
    <settings>
      <setting name="Sitecore.Services.SecurityPolicy">
        <patch:attribute name="value" value="Sitecore.Services.Infrastructure.Web.Http.Security.ServicesOnPolicy, Sitecore.Services.Infrastructure" />
      </setting>
      <setting name="HtmlEditor.DefaultProfile">
        <patch:attribute name="value" value="/sitecore/system/Settings/Html Editor Profiles/Rich Text Full" />
      </setting>
    </settings>

    <controlSources>
      <source assembly="Platform" namespace="Platform.Foundation.Core.Fields" prefix="ew" mode="on"/>
    </controlSources>

    <fieldTypes>
      <fieldType name="MultiRootTreelist" type="Sitecore.Data.Fields.MultilistField, Sitecore.Kernel" />
      <fieldType name="MultiRootTreelistEx" type="Sitecore.Data.Fields.MultilistField, Sitecore.Kernel" />
      <fieldType name="FilterableDroptree" type="Sitecore.Data.Fields.ReferenceField, Sitecore.Kernel" />
    </fieldTypes>

    <contentSearch search:require="Solr">
      <indexConfigurations>
        <defaultSolrIndexConfiguration>
          <fieldMap>
            <fieldTypes >
              <fieldType fieldTypeName="multiroottreelist|multiroottreelistex" returnType="stringCollection"/>
              <fieldType fieldTypeName="filterabledroptree" returnType="stringCollection"/>
            </fieldTypes>
          </fieldMap>
          <fieldReaders>
            <mapFieldByTypeName>
              <fieldReader fieldTypeName="multiroottreelist|multiroottreelistex" fieldReaderType="Sitecore.ContentSearch.FieldReaders.MultiListFieldReader, Sitecore.ContentSearch"/>
              <fieldReader fieldTypeName="filterabledroptree" fieldReaderType="Sitecore.ContentSearch.FieldReaders.LookupFieldReader, Sitecore.ContentSearch"/>
            </mapFieldByTypeName>
          </fieldReaders>
        </defaultSolrIndexConfiguration>
      </indexConfigurations>
    </contentSearch>

    <!-- END: Treelist/TreelistEX with multi roots configurations -->

  </sitecore>
</configuration>
